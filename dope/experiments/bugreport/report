gcc -v
Reading specs from /usr/lib/gcc-lib/i386-linux/2.95.2/specs
gcc version 2.95.2 20000220 (Debian GNU/Linux)

(Also tested:
 gcc -v
 Reading specs from /usr/lib/gcc-lib/i386-linux/2.95.4/specs
 gcc version 2.95.4 20011006 (Debian prerelease)

 fixed in gcc 3.0.3.
)

Systems:
debian gnu/linux potato (with some updates)
glibc 2.1.3

debian gnu/linux unstable
glibc 2.2.4


Related bugs ?
first i thought bug #2440 might be related


 > g++ -Wall -ansi -pedantic --save-temps bug.cpp -o bug
bug.cpp: In function `int main()':
bug.cpp:11: warning: unused variable `streamsize r'
 > ./bug 
Segmentation fault
 > g++ -Wall -ansi -pedantic --save-temps bug.cpp -o bug -lefence
bug.cpp: In function `int main()':
bug.cpp:11: warning: unused variable `streamsize r'
 > gdb ./bug
[...]
Starting program: /home/jens/develop/dope3/bugreport/./bug 
(no debugging symbols found)...(no debugging symbols found)...(no debugging symbols found)...

  Electric Fence 2.0.5 Copyright (C) 1987-1998 Bruce Perens.

ElectricFence Aborting: free(40014000): address not from malloc().
(no debugging symbols found)...(no debugging symbols found)...
Program received signal SIGILL, Illegal instruction.
0x400a4921 in kill () from /lib/libc.so.6
(gdb) i s
#0  0x400a4921 in kill () from /lib/libc.so.6
#1  0x40020c56 in EF_Abort () from /usr/lib/libefence.so.0
#2  0x400205e1 in free () from /usr/lib/libefence.so.0
#3  0x400d2f31 in _IO_default_finish () from /lib/libc.so.6
#4  0x4004434e in streambuf::~streambuf () from /usr/lib/libstdc++-libc6.1-2.so.3
#5  0x4003f17a in filebuf::~filebuf () from /usr/lib/libstdc++-libc6.1-2.so.3
#6  0x400538fa in ifstream::~ifstream () from /usr/lib/libstdc++-libc6.1-2.so.3
#7  0x8048777 in main ()
#8  0x4009ea42 in __libc_start_main () from /lib/libc.so.6
(gdb) 


file bug.cpp:

#include <fstream>

#define TOMUCH 1000
int main()
{
  // read from any stream until eof
  std::ifstream i("bug.cpp");
  std::streambuf &s=*i.rdbuf();
  char cb[TOMUCH];
  std::streamsize r=s.sgetn(cb,TOMUCH);
  // this is the problem
  // if you unget when previously get failed due to eof
  s.sungetc();
  // this would trigger the same problem
  // s.sputbackc('A');
  // and i think the real problem is pbackfail (_IO_default_pbackfail (genops.c))
  // which they call both
}

